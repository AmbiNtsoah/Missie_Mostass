name: CI/CD Pipeline (Windows)

on:
  push:
    branches:
      - developper_2
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout du dépôt
        uses: actions/checkout@v4

      - name: Créer le répertoire build
        run: mkdir build

      - name: Télécharger les dépendances JUnit
        run: |
          curl -L -o junit-platform-console-standalone.jar https://repo.maven.apache.org/maven2/org/junit/platform/junit-platform-console-standalone/1.7.1/junit-platform-console-standalone-1.7.1.jar
          curl -L -o junit-jupiter-api.jar https://repo.maven.apache.org/maven2/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar
          curl -L -o junit-jupiter-engine.jar https://repo.maven.apache.org/maven2/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar

      - name: Télécharger le pilote SQLite JDBC
        run: |
          curl -L -o sqlite-jdbc.jar https://repo1.maven.org/maven2/org/xerial/sqlite-jdbc/3.36.0.3/sqlite-jdbc-3.36.0.3.jar
          ls -lh sqlite-jdbc.jar  # Vérifie la taille du fichier
          file sqlite-jdbc.jar    # Vérifie le type du fichier

      - name: Vérifier les fichiers téléchargés
        run: dir

      - name: Compiler les fichiers Java
        run: |
          javac -cp ".;build;sqlite-jdbc.jar;junit-platform-console-standalone.jar;junit-jupiter-api.jar;junit-jupiter-engine.jar" -d build src\frames\*.java

      - name: Exécuter les tests unitaires
        run: |
          java -cp ".;build;sqlite-jdbc.jar;junit-platform-console-standalone.jar;junit-jupiter-api.jar;junit-jupiter-engine.jar" org.junit.platform.console.ConsoleLauncher --scan-classpath

      - name: Déploiement local
        run: .\deploy.bat
